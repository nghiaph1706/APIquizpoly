[{"q":"Viết document theo Swagger tiếp cận hướng Top-down là gì?","a":"thiết kế các API trước khi code"},{"q":"Chọn định nghĩa đúng Tài liệu hướng dẫn sử dụng API","a":"Tài liệu hướng dẫn sử dụng API là một nội dung kỹ thuật, chứa tất cả các thông tin được yêu cầu để có thể làm việc với API"},{"q":"Mỗi OpenAPI specifications có thông tin \"title\" dùng làm gi?","a":"mô tả tên API"},{"q":"Chọn phát biểu đúng về Swagger-UI","a":"dùng để generate ra file html,css,… từ 1 file config"},{"q":"Chọn phát biểu đúng về OpenAPI Specification","a":"là một định dạng mô tả API dành cho REST APIs"},{"q":"Tài liệu hướng dẫn sử dụng api nên","a":"Hạn chế thuật ngữ kỹ thuật chuyên sâu"},{"q":"Tài liệu hướng dẫn sử dụng api nên có","a":"Source code mẫu, tài liệu hướng dẫn nhanh"},{"q":"Chọn thành phần xuất hiện trong tài liệu hướng dẫn sử dụng api nên có?","a":"Error Messages"},{"q":"Hãy điền mã đúng vào chỗ trống\nContact = new _____\n                    {\n                        Name = \"Thepv\",\n                        Email = \"thepv@gmail.com\",\n                        Url = new Uri(\"https://caodang.fpt.edu.vn/\"),\n                    }","a":"OpenApiContact"},{"q":"Hãy điền mã đúng vào chỗ trống để gọi middleware to serve swagger-ui\n_____.UseSwaggerUI(c = > \n            {\n                c.SwaggerEndpoint(\"/swagger/v1/swagger.json\", \"My API V1\");\n            });","a":"app"},{"q":"Hãy điền mã đúng vào chỗ trống để Bổ sung XML Comments\ncho tài liệu Api\nvar xmlFile = $\"{Assembly._____.GetName().Name}.xml\";","a":"GetExecutingAssembly()"},{"q":"OpenAPI Specification bao gồm thành phần nào?","a":["Phương thức xác thực","Thông tin liên hệ, chứng chỉ (HTTP/ HTTPS), điều khoản sử dụng và những thông tin khác"]},{"q":"Chọn mô tả đúng về tấn công DoS","a":["chiếm dụng một lượng tài nguyên khổng lồ trong Website bằng cách liên tục gửi những file có dung lượng lớn.","gây ra những ảnh hưởng như làm giảm tốc độ xử lý","làm ngưng hoạt động Server"]},{"q":"Chọn phương án hạn chế tấn công DoS","a":["Thiết lập giới hạn số lượng request từ người dùng","giới hạn dung lượng file upload"]},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn Controller xử lý công việc upload file\npublic async Task < IActionResult >  Index(List < IFormFile >  files)\n{\n long size = files.Sum(f = >  f.Length);\n   var filePaths = new List < string > ();\n   foreach (var formFile in files)\n   {\n    if (formFile.Length  >  0)\n    {\n    }\n   }\nreturn Ok(new { count = files.Count, size,_____ });\n}","a":"filePaths"},{"q":"Một số cách ngăn chặn việc chạy Script trên Server bằng file upload","a":["File do user upload lên không đưa vào public directory","Giới hạn file upload (không cho upload file script)"]},{"q":"Chọn mô tả đúng về kỹ thuật Client encode file (base64) rồi gởi về backend","a":["backend phải decode.","frontend phải encode","truy xuất tốn CPU","truy xuất tốn băng thông"]},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn Controller xử lý công việc upload file lên database và sử dụng IFormFile interface\npublic IActionResult Index(IFormFile files)\n{\n           if (files != null)\n            {\n                if (files.Length  >  0)\n                {\n                    var fileName = Path.GetFileName(files.FileName);\n      var newFileName = String.Concat(Convert.ToString(Guid.NewGuid()), fileExtension);\n      var objfiles = new Files()\n                    {\n                        DocumentId = 0,\n                        Name= newFileName,\n                        FileType = fileExtension,\n                        CreatedOn =  (_____)\n                    }; \n                }\n            }\n            return View();\n}","a":"DateTime.Now"},{"q":"Một số không thuận lợi khi dùng phương pháp upload file lên File system","a":["Bảo mật kém","Không đảm bảo ACID (Atomicity, Consistency, Isolation, Durability)"]},{"q":"Chọn các file trong cấu trúc project blazor server","a":"Startup.cs, _Host.cshtml, appsettings.json, App.razor"},{"q":"Framework/blazor.server.js đươc sử dụng bởi tập tin nào?","a":"_Host.cshtml"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn hàm javascipt trả ra thông báo đăng ký thành công email\nexport _____emailRegistration(message) {\n const result = prompt(message);\n if (result === '' || result === null)\n  return 'Please prvode an email'\n\n const returnMessage = 'Hi ' + result.split('@')[0] + ' your email: ' + result + ' has been accepted.';\n return returnMessage;\n}","a":"function"},{"q":"2 tập tin nào chỉ tồn tại trong dự án Blazor server","a":"_Host.cshtml and Error.razor"},{"q":"Blazor.webassembly.js đươc sử dụng bởi tập tin nào?","a":"index.html"},{"q":"Microsoft đưa .NET runtime lên WebAssembly gọi là","a":"Mono"},{"q":"Chọn phát biểu đúng về Blazor WebAssembly","a":"là C# dịch sang WebAssembly và chạy trên trình duyệt như một ứng dụng native."},{"q":"Điền vào chỗ trống để hoàn thiện mã nguồn gọi C# từ javascript\njsFunctions.calculateSquareRootWithJustResult = function () {\n    const number = prompt(\"Enter your number\");\n    DotNet.(_____)invokeMethodAsync(\"BlazorWasmJSInteropExamples\", \"CalculateSquareRootWithJustResult\", parseInt(number), true)\n        .then(result = >  {\n            var el = document.getElementById(\"result\");\n            el.innerHTML = result;\n        });\n}","a":"invokeMethodAsync"},{"q":"Chọn phát biểu đúng về Single Page Application","a":"Single Page Application (gọi tắt là SPA) là tên gọi chung cho một kiểu lập trình web."},{"q":"Mã Css trong dự án Blazor server mặc định lưu trữ ở tập tin nào","a":"site.css"},{"q":"Hàm javascript nào sẽ trả về Value, không trả về Void","a":"InvokeAsync < T > (name, args)"},{"q":"Chọn phát biểu đúng về WebAssembly","a":["Kết hợp bổ sung cho javascript","cho phép các đoạn mã thực thi trên các trình duyệt (browser).","Định dạng nhị phân mức thấp cho web, dịch ra từ ngôn ngữ low-level khác như C/C++, C# và Rust"]},{"q":"Nên chọn sử dụng blazor khi nào","a":["muốn cho thời gian khởi động ứng dụng nhanh","muốn kích thước tải xuống ban đầu của ứng dụng rất nhỏ","muốn sử dụng .NET Core runtime","muốn ứng dụng thân thiện với công cụ tìm kiếm"]},{"q":"Template mặc định cho các component của Blazor sử dụng mô hình?","a":"single file"},{"q":"Script blazor.server.js được đặt vị trí nào trong _Host.cshtml","a":"Cuối tập tin"},{"q":"Chọn loại page nào khi tạo mới môt page trong blazor","a":"Razor Component"},{"q":"Điền vào chỗ trống hoàn thiện hàm loadWebAssembly \nfunction loadWebAssembly(fileName) {\n    return fetch(fileName)\n       .then(response = >  response.arrayBuffer())\n       .then(buffer = >  (_____).compile(buffer))\n       .then(module = >  {return new WebAssembly.Instance(module) });\n};","a":"WebAssembly"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn trong App.razor\n < LayoutView Layout=\"_____\" > \n             < p > Sorry, there's nothing at this address. < /p > \n < /LayoutView >","a":"@typeof(MainLayout)"},{"q":"Component logic nằm trong khối nào?","a":"@code { }"},{"q":"Phương thức main gọi phương thức nào để cấu hình asp.net core host?","a":"CreateHostBuilder"},{"q":"Chọn phát biểu đúng về Blazor Server","a":"Blazor Server app chứa các component (thành phần cơ bản của ứng dụng Blazor) trên server và xử lý tương tác trên UI thông qua SignalR theo thời gian thực"},{"q":"Chọn mô tả đúng về Blazor Server","a":"Blazor Server nghĩa là \"UI được tạo ra ở Server và gửi cho client theo thời gian thực\", và \"Client chỉ áp dụng những thay đổi do Server cung cấp\"."},{"q":"Chọn phát biểu đúng về WebAssembly","a":"cho phép các đoạn mã thực thi trên các trình duyệt (browser)."},{"q":"Cần khai báo thư viện nào khi dùng IFileReaderService","a":"Blazor.FileReader"},{"q":"Blazor sử dụng thư viện nào cho việc đọc tập tin","a":"Tewr.Blazor.FileReader"},{"q":"Sử dụng chỉ thị nào quản lý liên kết giưa các page trong razor","a":"NavigationManager"},{"q":"Các attribute được sử dụng trong cơ chế Two-way data binding","a":["@bind","Parameter","bind-value-onchange","bind-value-oninput"]},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn phương thức thêm thành công \nprotected async void CreateEmployee()  \n    {  \n        await employeeService.InsertEmployeeAsync(obj);  \n        NavigationManager._____(\"Employees\");  \n    }","a":"NavigateTo"},{"q":"Chọn phát biểu đúng vê Data Binding","a":["Cơ chế lấy dữ liệu từ trong component (phần business logic) và đưa ra view","Kỹ thuật liên kết một nguồn dữ liệu với nơi sử dụng dữ liệu đó, và đồng bộ hóa dữ liệu giữa chúng"]},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn AppDbContext.cs để cơ chế migration tạo ra table Employees dựa trên modle Employee\npublic class AppDBContext : DbContext  \n    {  \n        public AppDBContext(_____ < AppDBContext >  options) : base(options)  \n        {   \n        }  \n        public DbSet < Employee >  Employees { get; set; }  \n    }","a":"DbContextOptions"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn one-way-binding cho Title\n < ChildOneWayBinding MainTitle=\"@Title\" / > \n@code {\n public string Title (_____) = \"One-Way Binding\";\n private void ModifyTitle() = >  Title = \"One-Way Binding Modified\";\n}","a":"{ get; set; }"},{"q":"Data Binding có những cách nào?","a":["1 chiều","2 chiều"]},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn binding dữ liệu cho thuộc tính City\n < div class=\"form-group\" >   \n                 < label for=\"City\" class=\"control-label\" > City < /label >   \n                 < input form=\"City\" class=\"form-control\" (_____)=\"@obj.City\" / >   \n < /div >","a":"@bind"},{"q":"Blazor hỗ trợ các tinh năng nào của một SPA page","a":["Client-side rendering","Forms and validation, JavaScript interop","Routing, Layouts","Server-side rendering, Dependency Injection"]},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn phương thức truy vấn danh sách Employee\npublic async Task < List < Employee >  >  GetAllEmployeesAsync()\n        {\n            return await _appDBContext.Employees.(_____);\n        }","a":"ToListAsync()"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn phương thức xóa Employee\npublic async Task < bool >  DeleteEmployeeAsync(Employee employee)\n        {\n            _appDBContext.Remove(employee);\n            await _appDBContext.(_____)SaveChangesAsync();\n            return true;\n        }","a":"SaveChangesAsync()"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn razor hiển thị mã barcode\n_____, Microsoft.AspNetCore.Mvc.TagHelpers\n < !DOCTYPE html > \n < html > \n < body > \n    @if (ViewBag.BarcodeImage != null)\n    {\n         < img src=\"@ViewBag.BarcodeImage\" alt=\"\" / > \n    }\n < /body > \n < /html >","a":"@addTagHelper*"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn blazor hiển thị mã barcode\n@code\n{\n    string barcode = \"\";\n   string barcode_text = \"\";\n    void GenerateBarcode()\n    {\n        BarcodeFonts bcf = new BarcodeFonts();\n        bcf.BarcodeType = BarcodeFonts.BarcodeEnum.Code39;\n        bcf.CheckDigit = BarcodeFonts.YesNoEnum.Yes;\n        bcf.Data = \"1234567\";\n        bcf.encode();\n        barcode = bcf.EncodedData;\n        barcode_text = _____\n    }\n}","a":"bcf.HumanText;"},{"q":"Các thư viện nào được dùng khi tạo BARCODE IN ASP.NET CORE","a":["System.Drawing.Common","Zxing.Net"]},{"q":"QR Code là chữ viết tắt của chữ Quick response code","a":"Quick response code"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn razor hiển thị mã barcode\n < form asp-action=\"Index\"_____ =\"Home\" > \n         < input type=\"text\" name=\"barcode\" / > \n         < input type=\"submit\" value=\"Generate Barcode\" / > \n     < /form >","a":"asp-controller"},{"q":"Chọn các công dụng mã Barcode","a":["Kiểm kê thông tin sản phẩm, hàng hóa.","Phân biệt hàng thật, hàng giả","Thanh toán và giao dịch mua hàng","phân loại hàng hóa và quản lý kho"]},{"q":"Mã Barcode thường bao gồm các thông tin nào?","a":["mã doanh nghiệp.","mã số của quốc gia","mã số về mặt hàng","số về kiểm tra."]},{"q":"Chọn các công dụng mã QR Code","a":["Giảm chi phí nhân sự","Kiếm soát chất lượng, đồng nhất đơn hàng","Tra cứu thông tin sản phẩm","Truyền thông quảng cáo marketing"]},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn razor hiển thị mã barcode\n < body > \n     < form =_____\"Index\" asp-controller=\"Home\" > \n         < input type=\"text\" name=\"barcode\" / > \n         < input type=\"submit\" value=\"Generate Barcode\" / > \n     < /form > \n     < hr / > \n    @if (ViewBag._____ != null)\n    {\n         < img src=\"@ViewBag.BarcodeImage\" alt=\"\" / > \n    }\n < /body >","a":["BarcodeImage","asp-action"]},{"q":"Các Unit Testing Tools thông dụng?","a":["Bunit","Nunit","TestNG","Xuni"]},{"q":"Chọn các lý do vì sao nên kiểm thử phần mềm","a":["Để có được niềm tin của khách hàng","Để kiểm tra khả năng thích ứng của phần mềm","Để tránh phát sinh thêm chi phí","Để xác định lỗi"]},{"q":"Chọn các nội dung liên quan Manual Test","a":["tester sẽ thực hiện các trường hợp kiểm thử và tạo báo cáo kiểm thử hoàn toàn thủ công mà không có bất kỳ sự trợ giúp của công cụ tự động nào","thử nghiệm một phầm mềm hoàn toàn được làm bằng tay bởi người tester.","thực hiện nhằm phát hiện lỗi trong phầm mềm đang được phát triển"]},{"q":"Trong xUnit sử dụng atrribte nào chỉ định tên hiển thị khi chạy một phương thức test","a":"DisplayName"},{"q":"Các đặc điểm của một đơn vị kiểm thử tốt?","a":["Có thể dùng trong tương lai","Kết quả nhất quán","Tự động và có thể lặp","Độc lập với các đơn vị kiểm thử khác"]},{"q":"Các hạn chế khi ứng dụng Dependency Injection trong viết phương thức kiểm thử?","a":["Khó dò tìm lỗi","Sử dụng nhiều thời gian, tài nguyên","Viết mã nguồn phức tạp"]},{"q":"Mock Objects sử dụng phương thức nào gọi các hành động trong controller","a":"setup"},{"q":"Điền vào chỗ trống hoàn thành phương thức thực hiện unit test \n    \n        public void Add()\n        {\n            double x1 = 5;\n            double x2 = 8;\n            double expected = 13;\n            var actual = _unitUnderTesting.Add(x1, x2);\n            Assert.Equal(expected, actual, 0);\n        }","a":"fact"},{"q":"Sử dụng attribute nào hỗ trợ truyền đối số vào các phương thức kiểm thử trong xUnit","a":"InlineData"},{"q":"Trong xUnit sử dụng atrribte nào chỉ định bỏ qua không chay một phương thức test","a":"skip"},{"q":"Chọn các định nghĩa đúng về Unit Testing","a":["phương pháp kiểm thử phần mềm dựa trên các đơn vị kiểm thử","đơn vị kiểm thử này có thể là các phương thức hay lớp"]},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn phương thức thêm thành công Employee và liên kết tới page Employees\nprotected async void CreateEmployee()  \n    {  \n        await employeeService.InsertEmployeeAsync(obj);  \n        NavigationManager.NavigateTo(\"(_____)\");  \n    }","a":"Employees"},{"q":"Các tập tin nào được tạo ra khi tạo ứng dụng blazor server?","a":["App.razor, _Host.cshtml, MainLayout.cshtml","Index.razor, _Imports.razor"]},{"q":"Chọn phát biểu đúng về mã Barcode","a":["công cụ để các nhà sản xuất có thể biểu đạt thông tin về sản phẩm như tên thương hiệu, sản xuất tại đâu, lô hàng","là một phương thức biểu thị dữ liệu, thông tin dưới dạng hình ảnh"]},{"q":"Mã Css trong dự án Blazor WebAssembly mặc định lưu trữ ở tập tin nào","a":"app.css"},{"q":"Hãy điền mã đúng vào chỗ trống để Bổ sung XML Comments\ncho tài liệu Api\nvar xmlPath = Path.Combine(_____.BaseDirectory, xmlFile);","a":"AppContext"},{"q":"Khi tạo mới dự án Testing Project sử dụng xUnit thì cần cài thêm thư viện nào","a":"xUnit.Net"},{"q":"Mô hình code-behind trong blaror được dùng thông qua cách nào?","a":["kế thừa","partial class"]},{"q":"Một số ảnh hưởng do tấn công Chạy Script trên Server bằng file upload?","a":["Gửi mail ra bên ngoài","Thay đổi dữ liệu trong cở sở dữ liệu","Truy vấn, làm giả, sửa đổi, xóa file trong Web Server","Tấn công đến Server khác"]},{"q":"Chọn phát biểu đúng về @ondragenter","a":"là Drag events"},{"q":"Viết document cho Swagger có cách tiếp cận nào","a":["Bottom-up","Top-down"]},{"q":"Điền vào chỗ trống hoàn thành mã nguồn trong controller cho action method Divide\n    \n        [Route(\"Divide\")]\n        public double Divide(double x1, double x2)\n        {\n            return _mathService.Divide(x1, x2);\n        }","a":"httppost"},{"q":"Một file OpenAPI cho phép bạn mô tả toàn bộ API bao gồm","a":["Cho phép những endpoints (/users) và cách thức hoạt động của mỗi endpoint (GET, POST, PUT, DELETE).","Các tham số đầu vào & đầu ra của từng API","Phương thức xác thực","Thông tin liên hệ, chứng chỉ (HTTP/ HTTPS), điều khoản sử dụng và những thông tin khác"]},{"q":"Phương thức ConfigureServices gọi phương thức nào để đăng ký Blazor Server trong ứng dụng Blazor Server ?","a":"AddServerSideBlazor"},{"q":"Chọn phát biểu đúng về Two-way Binding","a":["Binding dữ liệu chiều từ model tới view","Binding dữ liệu chiều từ view tới model","Sử dụng attribute '@bind'","kỹ thuật binding dữ liệu đa chiều"]},{"q":"Điền vào chỗ trống hoàn thành mã nguồn thêm model error trong phương thức test kiểm tra Name không được bỏ trống\n _controller.ModelState._____(\"Name\", \"Name is required\");","a":"AddModelError"},{"q":"Hoàn thiện mã nguồn khai báo chỉ thị gọi và truyền Id tới Delete page \n@page \"/Delete/_____\"","a":"{Id}"},{"q":"Thuộc tính nào được sử dụng ràng buộc dữ liệu mặc định trong cơ chế two-way binding","a":"@bind"},{"q":"Chọn cú pháp tổng quan two-way binding dữ liệu","a":"@bind = “Property” @bind:event = “Event”"},{"q":"Hãy điền mã đúng vào chỗ trống để gọi middleware to serve swagger-ui\napp.UseSwaggerUI(c = > \n            {\n                c.(_____)(\"/swagger/v1/swagger.json\", \"My API V1\");\n            });","a":"SwaggerEndpoint"},{"q":"Blazor WebAssembly hoạt động bằng cách?","a":["Tất cả các component viết bằng C# được dịch thành thư viện class và tải xuống trình duyệt.","các thư viện (dll) cần sử dụng tới trong chương trình Blazor WebAssembly sẽ được tải hết xuống trình duyệt"]},{"q":"Hãy điền mã đúng vào chỗ trống để Bổ sung XML Comments\ncho tài liệu Api\nvar xmlFile = $\"{Assembly.GetExecutingAssembly()._____.Name}.xml\";","a":"GetName()"},{"q":"Viết document theo Swagger có bao nhiêu cách tiếp cận chính","a":"2"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn Controller xử lý công việc upload file\npublic async Task < IActionResult >  Index(List < IFormFile >  files)\n{\n long size = files.Sum(f = >  f.Length);\n   var filePaths = new List < string > ();\n   foreach (var formFile in files)\n   {\n    if (formFile.Length  >  0)\n    {\n    }\n   }\n    return Ok(new { count = _____, size, filePaths });\n}","a":"files.Count"},{"q":"Hãy điền vào chỗ trống để Cấu hình Swagger Middleware\nservices.AddSwaggerGen(c = > \n            {\n                c.SwaggerDoc(\"v1\", new .    { Title = \"My API\", Version = \"v1\" });\n            });","a":"openapiinfo"},{"q":"Hãy điền mã đúng vào chỗ trống\nUrl = new    (\"https://caodang.fpt.edu.vn/\")","a":"uri"},{"q":"Hãy điền vào chỗ trống để Cấu hình Swagger Middleware\nservices.AddSwaggerGen(c = > \n            {\n                c.    (\"v1\", new OpenApiInfo { Title = \"My API\", Version = \"v1\" });\n            });","a":"swaggerdoc"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn gọi C# từ Javascript\npublic partial class CallDotNetFromJavaScript\n{\n    \n    public static string CalculateSquareRoot(int number)\n    {\n        var result = Math.Sqrt(number);\n        return $\"The square root of {number} is {result}\";\n    }\n}","a":"jsinvokable"},{"q":"Điền vào chỗ trống để hoàn thiện mã nguồn trong tập tin index.html của ứng dụng blazor WebAssembly\n < body > \n     < div id=\"app\" > Loading... < /div > \n     < div id=\"blazor-error-ui\" > \n        An unhandled error has occurred.\n         < a href=\"\" class=\"reload\" > Reload < /a > \n     < /div > \n     < script src=\"    \" >  < /script > \n < /body >","a":"_framework/blazor.webassembly.js"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn hàm javascipt trả ra thông báo đăng ký thành công email\nexport function emailRegistration(message) {\n const result = prompt(message);\n if (result === '' || result === null)\n  return 'Please prvode an email'\n\n const returnMessage = 'Hi ' + result.split('@')[0] + ' your email: ' + result + ' has been accepted.';\n    returnMessage;\n}","a":"return"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn gọi C# từ Javascript\npublic    class CallDotNetFromJavaScript\n{\n    Tải về\n    public static string CalculateSquareRoot(int number)\n    {\n        var result = Math.Sqrt(number);\n        return $\"The square root of {number} is {result}\";\n    }\n}","a":"partial"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn khi người dùng click chọn 'Click Me' thì tăng biến đếm 'currentCount' một đơn vị\n < p > Current count: @currentCount < /p > \n < button class=\"btn btn-primary\" @onclick=\"IncrementCount\" > Click me < /button > \n    {\n    private int currentCount = 0;\n    private void IncrementCount()\n    {\n        currentCount++;\n    }\n}","a":"@code"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn phương thức thêm thành công \nprotected async void CreateEmployee()  \n    {  \n        await employeeService.InsertEmployeeAsync(obj);  \n    .NavigateTo(\"Employees\");  \n    }","a":"NavigationManager"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn khi người dùng click chọn 'Click Me' thì tăng biến đếm 'currentCount' một đơn vị\n < p > Current count: @currentCount < /p > \n < button class=\"btn btn-primary\"    =\"IncrementCount\" > Click me < /button > \n@code {\n    private int currentCount = 0;\n    private void IncrementCount()\n    {\n        currentCount++;\n    }\n}","a":"@onclick"},{"q":"Iền vào chỗ trống hoàn thiện mã nguồn binding dữ liệu cho thuộc tính Title\n < h3 > @Title < /h3 > \n@code {\n    public string    { get; set; } = \"One-Way Binding\";\n}","a":"title"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn Controller xử lý công việc upload file\npublic async Task < IActionResult >  Index(List < IFormFile >  files)\n{\n long size = files.Sum(f = >  f.Length);\n   var filePaths = new List < string > ();\n   foreach (var formFile in files)\n   {\n    if (formFile.Length  >  0)\n    {\n     var filePath = Path.GetTempFileName();\n     filePaths.Add(filePath);\n     using (var stream = new    (filePath, FileMode.Create))\n     {\n      await formFile.CopyToAsync(stream);\n     }\n    }\n   }\n}","a":"filestream"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn Controller xử lý công việc download file\npublic FileResult DownloadFile(string fileName)\n        {\n            string path =    (this.Environment.WebRootPath, \"Files/\") + fileName;\n            byte[] bytes = System.IO.File.ReadAllBytes(path);\n            return File(bytes, \"application/octet-stream\", fileName);\n        }","a":"Path.Combine"},{"q":"Hoàn thiện mã nguồn cho form upload file\n < form method=\"post\" enctype=\"    \"\n              asp-controller=\"FileUpload\" asp-action=\"Index\" > \n                 < div class=\"col-md-10\" > \n                     < input type=\"submit\" value=\"Upload\" / > \n                 < /div > \n < /form >","a":"multipart/form-data"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn Controller xử lý công việc download file\npublic IActionResult Index()\n        {\n            List <      >  files = new List < FileModel > ();\n            foreach (string filePath in filePaths)\n            {\n                files.Add(new FileModel { FileName = Path.GetFileName(filePath) });\n            }\n            return View(files);\n        }","a":"filemodel"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn Controller xử lý công việc download file\npublic IActionResult Index()\n        {\n    = Directory.GetFiles(Path.Combine(this.Environment.WebRootPath, \"Files/\"));\n        }","a":"string[]-filePaths"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn Controller xử lý công việc upload file lên database và sử dụng IFormFile interface\npublic IActionResult Index(IFormFile files)\n{\n           if (files != null)\n            {\n                if (files.Length  >  0)\n                {\n                    var fileName = Path.GetFileName(files.FileName);\n      var newFileName = String.Concat(Convert.ToString(Guid.NewGuid()),    );\n                }\n            }\n            return View();\n}","a":"fileExtension"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn Controller xử lý công việc download file\npublic    DownloadFile(string fileName)\n        {\n            string path = Path.Combine(this.Environment.WebRootPath, \"Files/\") + fileName;\n            byte[] bytes = System.IO.File.ReadAllBytes(path);\n        }","a":"FileResult"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn Controller xử lý công việc upload file\npublic async Task < IActionResult >  Index(List < IFormFile >  files)\n{\n long size = files.Sum(f = >  f.Length);\n   var filePaths = new List < string > ();\n   foreach (var formFile in files)\n   {\n    if (formFile.Length  >  0)\n    {\n     var filePath = Path.GetTempFileName();\n     filePaths.Add(filePath);\n     using (var stream = new FileStream(filePath, FileMode.Create))\n     {\n      await formFile.    (stream);\n     }\n    }\n   }\n}","a":"copytoasync"},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn cho Counter.razor :\n    \"/counter\n < h1 > Counter < /h1 > \n < p > Current count: @currentCount < /p > \n < button class=\"btn btn-primary\" @onclick=\"IncrementCount\" > Click me < /button > \n@code {\n    private int currentCount = 0;\n    private void IncrementCount()\n    {\n        currentCount++;\n    }\n}","a":"@page"},{"q":"Chọn phát biểu đúng về WebAssembly","a":["WebAssembly là một loại định dạng mã lệnh ở dạng nhị phân kích thước nhỏ gọn mà tất cả các trình duyệt hiện đại đều có thể hiểu và thực thi.","WebAssembly được thiết kế làm mã đích cho các ngôn ngữ khác."]},{"q":"Điền vào chỗ trống hoàn thiện mã nguồn cho Index.razor\n    \"/\"\n < h1 > Hello, world! < /h1 >","a":"@page"}]